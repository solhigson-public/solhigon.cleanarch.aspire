#nullable enable
using System.Threading.Tasks;

namespace SolhigsonAspnetCoreApp.Infrastructure.Repositories.Abstractions
{
    /*
     * Generated by: Solhigson.Framework.efcoretool
     *
     * https://github.com/solhigson-public/solhigson.framework
     * https://www.nuget.org/packages/solhigson.framework.efcoretool
     *
     * This file is ALWAYS overwritten, DO NOT place custom code here
     */
    public partial interface ICountryRepository 
        : SolhigsonAspnetCoreApp.Infrastructure.Repositories.Abstractions.ISolhigsonAspnetCoreAppCachedRepositoryBase<SolhigsonAspnetCoreApp.Domain.Entities.Country
            ,SolhigsonAspnetCoreApp.Domain.CacheModels.CountryCacheModel>
    {
		Task<SolhigsonAspnetCoreApp.Domain.Entities.Country?> GetByIdAsync(string id);
		Task<TK?> GetByIdAsync<TK>(string id) where TK : class;
		Task<SolhigsonAspnetCoreApp.Domain.Entities.Country?> GetByCodeAsync(string code);
		Task<TK?> GetByCodeAsync<TK>(string code) where TK : class;

		//Cached Methods
		Task<SolhigsonAspnetCoreApp.Domain.CacheModels.CountryCacheModel?> GetByIdCachedAsync(string id);
		Task<TK?> GetByIdCachedAsync<TK>(string id) where TK : class;
		Task<SolhigsonAspnetCoreApp.Domain.CacheModels.CountryCacheModel?> GetByCodeCachedAsync(string code);
		Task<TK?> GetByCodeCachedAsync<TK>(string code) where TK : class;
    
    }
}