#nullable enable
using System.Threading.Tasks;

namespace SolhigsonAspnetCoreApp.Infrastructure.Repositories.Abstractions
{
    /*
     * Generated by: Solhigson.Framework.efcoretool
     *
     * https://github.com/solhigson-public/solhigson.framework
     * https://www.nuget.org/packages/solhigson.framework.efcoretool
     *
     * This file is ALWAYS overwritten, DO NOT place custom code here
     */
    public partial interface ICurrencyRepository 
        : SolhigsonAspnetCoreApp.Infrastructure.Repositories.Abstractions.ISolhigsonAspnetCoreAppCachedRepositoryBase<SolhigsonAspnetCoreApp.Domain.Entities.Currency
            ,SolhigsonAspnetCoreApp.Domain.CacheModels.CurrencyCacheModel>
    {
		Task<SolhigsonAspnetCoreApp.Domain.Entities.Currency?> GetByIdAsync(string id);
		Task<TK?> GetByIdAsync<TK>(string id) where TK : class;
		Task<SolhigsonAspnetCoreApp.Domain.Entities.Currency?> GetByAlphabeticCodeAsync(string alphabeticCode);
		Task<TK?> GetByAlphabeticCodeAsync<TK>(string alphabeticCode) where TK : class;
		Task<SolhigsonAspnetCoreApp.Domain.Entities.Currency?> GetByNumericCodeAsync(string numericCode);
		Task<TK?> GetByNumericCodeAsync<TK>(string numericCode) where TK : class;

		//Cached Methods
		Task<SolhigsonAspnetCoreApp.Domain.CacheModels.CurrencyCacheModel?> GetByIdCachedAsync(string id);
		Task<TK?> GetByIdCachedAsync<TK>(string id) where TK : class;
		Task<SolhigsonAspnetCoreApp.Domain.CacheModels.CurrencyCacheModel?> GetByAlphabeticCodeCachedAsync(string alphabeticCode);
		Task<TK?> GetByAlphabeticCodeCachedAsync<TK>(string alphabeticCode) where TK : class;
		Task<SolhigsonAspnetCoreApp.Domain.CacheModels.CurrencyCacheModel?> GetByNumericCodeCachedAsync(string numericCode);
		Task<TK?> GetByNumericCodeCachedAsync<TK>(string numericCode) where TK : class;
    
    }
}